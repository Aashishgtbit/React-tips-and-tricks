{"version":3,"sources":["store/reducers/counterReducer.js","store/constants/index.js","store/reducers/index.js","store/index.js","components/Loader/index.js","components/CodeHighlighter/index.js","utils/appConstants.js","routes/Examples/HooksExample/index.js","routes/routes.config.js","routes/Examples/index.js","routes/Examples/LazyLoadingExample/index.js","routes/Examples/DynamicImportExample/index.js","routes/index.js","containers/AppBootUp/index.js","index.js"],"names":["counterReducer","state","action","type","rootReducer","combineReducers","store","createStore","applyMiddleware","logger","Loader","className","CodeHighlighter","props","codeString","language","style","docco","CODE_EXAMPLES","hooksExampleCode","dynamicImport","lazyLoadExampleCode","addFruitsFunctionCount","Set","addVegetableFunctionCount","routesConfig","path","component","to","name","Alert","React","lazy","fallback","color","useState","sum","setSum","addData","useCallback","then","add","default","onClick","appleCounter","setAppleCounter","beansCounter","setBeansCounter","totalProfit","useMemo","addVegetable","addFruits","size","Route","propTypes","history","PropTypes","object","isRequired","Routes","map","config","exact","key","render","AppBootUp","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d8a2c2a8.chunk.js","sourcesContent":["import { INCREMENT, DECREMENT } from \"../constants\";\n\nconst counterReducer = (state = 0, action) => {\n  switch (action.type) {\n    case INCREMENT:\n      return state + 1;\n    case DECREMENT:\n      return state - 1;\n    default:\n      return state;\n  }\n};\n\nexport default counterReducer;\n","export const INCREMENT = \"INCREMENT\";\nexport const DECREMENT = \"DECREMENT\";\n","import { combineReducers } from \"redux\";\n\nimport counterReducer from \"./counterReducer\";\n\nconst rootReducer = combineReducers({\n    counterReducer\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"./reducers\";\n\nconst store = createStore(rootReducer, applyMiddleware(logger));\n\nexport default store;\n","import React from \"react\";\nimport \"./style.scss\";\n\nconst Loader = () => {\n    return (\n        <div className=\"wrapper-loader\">\n            <div className=\"eye-animation-wrapper\">\n                <div className=\"eye-animation\" />\n                <div>Loading ...</div>\n            </div>\n        </div>\n    );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport \"./style.scss\";\n\nconst CodeHighlighter = props => {\n    const { codeString } = props;\n\n    return (\n        <>\n            <div className=\"demo-heading\"> Demo : </div>\n            <div className=\"wrapper-code-demo\">\n                <SyntaxHighlighter language=\"javascript\" style={docco}>\n                    {codeString}\n                </SyntaxHighlighter>\n            </div>\n        </>\n    );\n};\n\nexport default CodeHighlighter;\n","const CODE_EXAMPLES = {\n    hooksExampleCode: `import React, { useState, useCallback, useMemo } from \"react\";\nimport \"./style.scss\";\n\nconst addFruitsFunctionCount = new Set();\nconst addVegetableFunctionCount = new Set();\n\nconst applePrice = 4; // each unit costs 4$ of money .\nconst beansPrice = 2; // each unit costs 2$ of money .\n\nexport default function HooksExample() {\n    const [appleCounter, setAppleCounter] = useState(0);\n    const [beansCounter, setBeansCounter] = useState(0);\n\n    const totalProfit = useMemo(() => {\n        return appleCounter * applePrice + beansCounter * beansPrice;\n    }, [beansCounter]);\n\n    const addVegetable = useCallback(() => {\n        setBeansCounter(beansCounter + 1);\n    }, [beansCounter]);\n\n    // calculate profit made by the shopkeeper\n\n    const addFruits = () => {\n        setAppleCounter(appleCounter + 1);\n    };\n\n    // In each render new instance of addFruits will be created .\n    addFruitsFunctionCount.add(addFruits);\n\n    addVegetableFunctionCount.add(addVegetable);\n    return (\n        <div className=\"wrapper-hooks-example\">\n            <h3> Hooks Example</h3>\n            <div className=\"wrapper-fruits\">\n                <button onClick={addVegetable} type=\"button\">\n                    Add vegetables\n                </button>\n            </div>\n            <div className=\"wrapper-vegetables\">\n                <button onClick={addFruits} type=\"button\">\n                    Add fruits\n                </button>\n            </div>\n            <div>\n                New functions created :\n                <ul>\n                    <li>fruits :{addFruitsFunctionCount.size - 1}</li>\n                    <li>vegetable : {addVegetableFunctionCount.size - 1}</li>\n                </ul>\n            </div>\n\n            <div> Total Profit = {totalProfit}</div>\n\n        </div>\n    );\n}`,\n\n    dynamicImport: `import React, { useState, useCallback } from \"react\";\nimport \"./style.scss\";\n// Dynamic import example .\n\nexport default function DynamicImport() {\n    const a = 10;\n    const b = 20;\n    const [sum, setSum] = useState(0);\n\n    const addData = useCallback(() => {\n        // Dynamic import syntax .\n        import(\"lodash\").then(_ => {\n            setSum(_.add(a, b));\n        });\n    }, []);\n\n    return (\n        <div className=\"wrapper-dynamic-import\">\n            <h2> Dynamic Import Example</h2>\n            <button onClick={addData} type=\"button\">\n                Add\n            </button>\n            <div>\n                sum is\n                {sum}\n            </div>\n        </div>\n    );\n}`,\n\n    lazyLoadExampleCode: `import React, { Suspense } from \"react\";\n// import { Alert } from \"reactstrap\";\nimport Loader from \"../../../components/Loader\";\nimport \"./style.scss\";\n\n\nexport default function LazyLoadingExample() {\n    const Alert = React.lazy(() => import(\"reactstrap/lib/Alert\"));\n    return (\n        <div className=\"wrapper-lazy-load\">\n            <h2> Lazy loading Example</h2>\n            <Suspense fallback={<Loader />}>\n                <Alert color=\"success\">This is Example of Lazy Loading</Alert>\n            </Suspense>\n\n        </div>\n    );\n}\n`\n};\n\nexport default CODE_EXAMPLES;\n","/* eslint-disable react/jsx-one-expression-per-line */\nimport React, { useState, useCallback, useMemo } from \"react\";\nimport \"./style.scss\";\nimport CODE_EXAMPLES from \"../../../utils/appConstants\";\nimport CodeHighlighter from \"../../../components/CodeHighlighter\";\n\nconst addFruitsFunctionCount = new Set();\nconst addVegetableFunctionCount = new Set();\n\nconst applePrice = 4; // each unit costs 4$ of money .\nconst beansPrice = 2; // each unit costs 2$ of money .\n\nexport default function HooksExample() {\n    const [appleCounter, setAppleCounter] = useState(0);\n    const [beansCounter, setBeansCounter] = useState(0);\n\n    const totalProfit = useMemo(() => {\n        return appleCounter * applePrice + beansCounter * beansPrice;\n    }, [beansCounter]);\n\n    const addVegetable = useCallback(() => {\n        setBeansCounter(beansCounter + 1);\n    }, [beansCounter]);\n\n    // calculate profit made by the shopkeeper\n\n    const addFruits = () => {\n        setAppleCounter(appleCounter + 1);\n    };\n\n    // In each render new instance of addFruits will be created .\n    addFruitsFunctionCount.add(addFruits);\n\n    addVegetableFunctionCount.add(addVegetable);\n    return (\n        <div className=\"wrapper-hooks-example\">\n            <h3> Hooks Example</h3>\n            <div className=\"wrapper-fruits\">\n                <button onClick={addVegetable} type=\"button\">\n                    Add vegetables\n                </button>\n            </div>\n            <div className=\"wrapper-vegetables\">\n                <button onClick={addFruits} type=\"button\">\n                    Add fruits\n                </button>\n            </div>\n            <div>\n                New functions created :\n                <ul>\n                    <li>fruits :{addFruitsFunctionCount.size - 1}</li>\n                    <li>vegetable : {addVegetableFunctionCount.size - 1}</li>\n                </ul>\n            </div>\n            <div> Total Profit = {totalProfit}</div>\n\n            <CodeHighlighter codeString={CODE_EXAMPLES.hooksExampleCode} />\n        </div>\n    );\n}\n","import Examples from \"./Examples\";\nimport LazyLoadingExample from \"./Examples/LazyLoadingExample\";\nimport HooksExample from \"./Examples/HooksExample\";\nimport DynamicImport from \"./Examples/DynamicImportExample\";\n\nconst routesConfig = [\n    {\n        path: \"/\",\n        component: Examples,\n        name: \"Examples\"\n    },\n    {\n        path: \"/lazy-load\",\n        component: LazyLoadingExample,\n        name: \"LazyLoadingExample\"\n    },\n    {\n        path: \"/dynamic-import\",\n        component: DynamicImport,\n        name: \"DynamicImportExample\"\n    },\n    {\n        path: \"/hooks\",\n        component: HooksExample,\n        name: \"HooksExample\"\n    }\n];\n\nexport default routesConfig;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Examples() {\n    return (\n        <div className=\"wrapper-example\">\n            <h2> React sample examples </h2>\n            <ul>\n                <li>\n                    <Link to=\"lazy-load\">Lazy-loading Example .</Link>\n                </li>\n                <li>\n                    <Link to=\"dynamic-import\">Dynamic Import Example .</Link>\n                </li>\n                <li>\n                    <Link to=\"hooks\">Hooks Example .</Link>\n                </li>\n            </ul>\n            {/* <DynamicImportExample />\n            <HooksExample />\n            <LazyLoadingExample /> */}\n        </div>\n    );\n}\n","import React, { Suspense } from \"react\";\n// import { Alert } from \"reactstrap\";\nimport Loader from \"../../../components/Loader\";\nimport \"./style.scss\";\nimport CodeHighlighter from \"../../../components/CodeHighlighter\";\nimport CODE_EXAMPLES from \"../../../utils/appConstants\";\n\nexport default function LazyLoadingExample() {\n    const Alert = React.lazy(() =>\n        import(\n            /* webpackChunkName : \"reactstrapChunk\" */ \"reactstrap/lib/Alert\"\n        )\n    );\n    return (\n        <div className=\"wrapper-lazy-load\">\n            <h2> Lazy loading Example</h2>\n            <Suspense fallback={<Loader />}>\n                <Alert color=\"success\">This is Example of Lazy Loading</Alert>\n            </Suspense>\n            <CodeHighlighter codeString={CODE_EXAMPLES.lazyLoadExampleCode} />\n        </div>\n    );\n}\n","import React, { useState, useCallback } from \"react\";\nimport \"./style.scss\";\nimport CODE_EXAMPLES from \"../../../utils/appConstants\";\nimport CodeHighlighter from \"../../../components/CodeHighlighter\";\n// Dynamic import example .\n\nexport default function DynamicImport() {\n    const a = 10;\n    const b = 20;\n    const [sum, setSum] = useState(0);\n\n    const addData = useCallback(() => {\n        // Dynamic import syntax .\n        import(/* webpackChunkName: \"lodashChunk\" */ \"lodash/add\").then(add => {\n            setSum(add.default(a, b));\n        });\n    }, []);\n\n    return (\n        <div className=\"wrapper-dynamic-import\">\n            <h2> Dynamic Import Example</h2>\n            <div>\n                <button onClick={addData} type=\"button\">\n                    Add\n                </button>\n            </div>\n            <div>\n                sum is\n                {sum}\n            </div>\n\n            <CodeHighlighter codeString={CODE_EXAMPLES.dynamicImport} />\n        </div>\n    );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\n\nimport routesConfig from \"./routes.config\";\n\nconst Routes = () => (\n    <Router>\n        <Switch>\n            {routesConfig.map(config => {\n                return (\n                    <Route\n                      exact\n                      key={`${config.name}`}\n                      path={config.path}\n                      render={({ history }) => (\n                            <config.component history={history} />\n                        )}\n                    />\n                );\n            })}\n        </Switch>\n    </Router>\n);\n\nRoute.propTypes = {\n    history: PropTypes.object.isRequired\n};\nexport default Routes;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"../../store\";\nimport Routes from \"../../routes\";\n\nconst AppBootUp = () => (\n  <Provider store={store}>\n    <Routes />\n  </Provider>\n);\n\nexport default AppBootUp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport AppBootUp from \"./containers/AppBootUp\";\nimport \"./assets/styles/bootstrap/bootstrap.scss\";\n\nReactDOM.render(<AppBootUp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}